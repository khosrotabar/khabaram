import { useState, useEffect } from "react";
import { useDispatch, useSelector } from "react-redux";
import { useRouter } from "next/router";
import BeatLoader from "react-spinners/BeatLoader";
import Image from "next/image";
import Cookies from "js-cookie";

import styles from "./ProductDetailPart1.module.css";

import { addProduct } from "../../redux/shoppingCart";
import { changeNumber, saveProductCode } from "../../redux/shoppingCartBtn";

function ProductDetailPart1(props) {
  const router = useRouter();
  const dispatch = useDispatch();
  const cookieVal = Cookies.get("customer");
  const cartProductNumber = useSelector(
    (state) => state.shoppingCartBtn[0].number
  );
  const initialValCode = useSelector(
    (state) => state.shoppingCartBtn[0].initialVal
  );
  const [showLoading, setShowLoading] = useState(false);
  const [shoppingCartChange, setShoppingCartChange] = useState(
    props.shoppingCartChange
  );
  const [runAddToCartFunc, setRunAddToCartFunc] = useState(
    props.runAddToCartFunc
  );
  const [showPlusLoading, setShowPlusLoading] = useState("");
  const [showMinusLoading, setShowMinusLoading] = useState("");
  const [svgFill1, setSvgFill1] = useState("#585858");
  const [svgFill2, setSvgFill2] = useState("#585858");
  const [svgFill3, setSvgFill3] = useState("#585858");
  const [activeThumbler, setActiveThumbler] = useState("left");
  const [thumblersImage, setThumblersImage] = useState(props.imageUrl);
  const [scoresMean, setScoresMean] = useState(0);
  const colorsArraylength = props.colors.length;
  const [colorPollet, setColorPollet] = useState(
    props.colors[colorsArraylength - 1]
  );
  const scoresArray = props.score;
  const css = { width: "330px" };
  const css2 = { width: "146px" };
  const priceSvg = (
    <svg
      width="26"
      height="25"
      viewBox="0 0 26 25"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M13.3895 22.8914C13.7625 22.8914 14.0936 22.8773 14.3827 22.8492C14.6764 22.8258 14.9352 22.7883 15.159 22.7368C15.3875 22.69 15.5857 22.6267 15.7535 22.5471C15.9261 22.4722 16.0753 22.3808 16.2012 22.2731C16.397 22.1139 16.5439 21.9289 16.6418 21.7181C16.7444 21.5073 16.805 21.224 16.8236 20.868H15.7465C15.5134 20.868 15.2756 20.8493 15.0331 20.8118C14.7907 20.7743 14.5575 20.7111 14.3337 20.6221C14.1099 20.5284 13.8978 20.409 13.6973 20.2638C13.5014 20.1186 13.3289 19.9406 13.1797 19.7299C13.0352 19.5144 12.9186 19.2615 12.83 18.9711C12.7461 18.6807 12.7041 18.3482 12.7041 17.9735C12.7041 17.6503 12.7321 17.3646 12.788 17.1163C12.844 16.8634 12.9139 16.6409 12.9979 16.4489C13.0864 16.2569 13.1844 16.0906 13.2916 15.9501C13.3989 15.8049 13.5014 15.6784 13.5993 15.5707C13.8791 15.2897 14.1962 15.0742 14.5505 14.9243C14.9049 14.7698 15.2873 14.6925 15.6976 14.6925C16.2058 14.6925 16.6395 14.7815 16.9985 14.9595C17.3622 15.1328 17.6583 15.374 17.8867 15.6831C18.1199 15.9922 18.2901 16.3599 18.3973 16.7861C18.5046 17.2077 18.5582 17.6667 18.5582 18.1631V19.1186H19.7472V20.868H18.5512C18.5325 21.5097 18.4183 22.0506 18.2085 22.4909C18.0033 22.9312 17.6956 23.3152 17.2852 23.6431C17.0708 23.8117 16.8376 23.9569 16.5858 24.0787C16.334 24.2052 16.052 24.3105 15.7395 24.3949C15.4271 24.4792 15.0774 24.54 14.6904 24.5775C14.3081 24.6197 13.8745 24.6407 13.3895 24.6407V22.8914ZM15.6976 16.4419C15.3013 16.4419 14.9865 16.566 14.7534 16.8142C14.5202 17.0625 14.4037 17.4489 14.4037 17.9735C14.4037 18.1795 14.4433 18.3552 14.5226 18.5004C14.6065 18.6456 14.7114 18.765 14.8373 18.8587C14.9679 18.9477 15.1124 19.0132 15.2709 19.0554C15.4295 19.0976 15.588 19.1186 15.7465 19.1186H16.8236V18.1631C16.8236 17.8962 16.8027 17.669 16.7607 17.4817C16.7187 17.2896 16.6628 17.1304 16.5928 17.0039C16.5276 16.8775 16.4506 16.7768 16.362 16.7018C16.2781 16.6269 16.1942 16.5707 16.1102 16.5332C16.031 16.4957 15.954 16.4723 15.8794 16.463C15.8048 16.4489 15.7442 16.4419 15.6976 16.4419Z"
        fill="#4B416A"
      />
      <path
        d="M24.6011 14.9665C24.6104 14.9993 24.6291 15.0766 24.6571 15.1983C24.6897 15.3201 24.7247 15.47 24.762 15.648C24.7993 15.8213 24.8366 16.0157 24.8739 16.2311C24.9158 16.4466 24.9531 16.6644 24.9858 16.8845C25.0231 17.0999 25.0511 17.3107 25.0697 17.5168C25.093 17.7229 25.1047 17.9032 25.1047 18.0578C25.1047 18.5402 25.0254 18.9594 24.8669 19.3153C24.7083 19.6666 24.5008 19.957 24.2444 20.1865C23.9879 20.416 23.6989 20.587 23.3771 20.6994C23.0601 20.8118 22.7407 20.868 22.4189 20.868H19.4045V19.1186H22.4679C22.5238 19.1186 22.6031 19.1116 22.7057 19.0975C22.8129 19.0788 22.9178 19.0343 23.0204 18.9641C23.1277 18.8938 23.2209 18.7884 23.3002 18.6479C23.3795 18.5027 23.4191 18.306 23.4191 18.0578C23.4191 17.9547 23.4098 17.8306 23.3911 17.6854C23.3771 17.5355 23.3561 17.3763 23.3282 17.2077C23.3002 17.0391 23.2676 16.8681 23.2303 16.6948C23.1976 16.5168 23.165 16.3505 23.1323 16.196C23.0997 16.0367 23.0671 15.8939 23.0344 15.7674C23.0018 15.6363 22.9761 15.5356 22.9575 15.4653L24.6011 14.9665ZM23.9437 13.5965L22.7686 12.4022L23.9297 11.1938L25.1327 12.4022L23.9437 13.5965ZM21.0131 13.6035L19.8381 12.4092L20.9921 11.2008L22.1951 12.4092L21.0131 13.6035Z"
        fill="#4B416A"
      />
      <path
        d="M3.39914 20.8681C2.88624 20.8681 2.44561 20.8353 2.07725 20.7697C1.7089 20.7088 1.39882 20.6175 1.14704 20.4957C0.895247 20.3693 0.692418 20.21 0.538547 20.018C0.389339 19.826 0.275102 19.6011 0.195835 19.3435C0.116568 19.0859 0.062947 18.7955 0.0349706 18.4724C0.0116569 18.1445 0 17.7838 0 17.3904V10.7372H1.74154V17.3904C1.74154 17.7651 1.75319 18.0649 1.77651 18.2897C1.80448 18.5145 1.87209 18.6901 1.97934 18.8166C2.09124 18.9384 2.25677 19.0204 2.47592 19.0625C2.69973 19.1 3.00747 19.1187 3.39914 19.1187V20.8681Z"
        fill="#4B416A"
      />
      <path
        d="M8.30885 19.5402C8.35081 19.5402 8.41609 19.5332 8.50468 19.5192C8.59794 19.5004 8.69119 19.4489 8.78445 19.3646C8.8777 19.2803 8.9593 19.1515 9.02924 18.9782C9.10385 18.8002 9.14115 18.552 9.14115 18.2335C9.14115 18.1117 9.11784 17.9571 9.07121 17.7698C9.02924 17.5778 8.95231 17.3928 8.8404 17.2148C8.73316 17.0321 8.58628 16.8775 8.39977 16.7511C8.21793 16.6199 7.98712 16.5544 7.70735 16.5544C7.46489 16.5544 7.26673 16.627 7.11285 16.7722C6.95898 16.9174 6.82843 17.0977 6.72118 17.3131C6.6186 17.5286 6.53001 17.7628 6.45541 18.0157C6.38547 18.2639 6.30853 18.4911 6.2246 18.6972C6.39712 18.7955 6.57897 18.8962 6.77014 18.9993C6.96598 19.0976 7.15715 19.1866 7.34366 19.2662C7.53017 19.3459 7.70502 19.4114 7.86822 19.463C8.03608 19.5145 8.18295 19.5402 8.30885 19.5402ZM7.70735 14.812C8.19694 14.812 8.62358 14.9034 8.98728 15.086C9.35564 15.2687 9.65871 15.5146 9.89651 15.8237C10.139 16.1281 10.3185 16.4818 10.4351 16.8846C10.5563 17.2874 10.6169 17.7089 10.6169 18.1492C10.6169 18.6363 10.5749 19.0508 10.491 19.3927C10.4071 19.7346 10.2952 20.018 10.1553 20.2428C10.0201 20.4676 9.86387 20.6433 9.68669 20.7697C9.51417 20.9009 9.33932 20.9969 9.16213 21.0578C8.98961 21.1233 8.82175 21.1632 8.65856 21.1772C8.49536 21.1959 8.35548 21.2053 8.23891 21.2053C8.00577 21.2053 7.78429 21.1819 7.57447 21.1351C7.36464 21.0929 7.15016 21.0297 6.93101 20.9454C6.71652 20.8657 6.49271 20.7674 6.25957 20.6503C6.02643 20.5285 5.77232 20.3927 5.49721 20.2428C5.28739 20.4676 5.06125 20.6292 4.81878 20.7276C4.58098 20.8212 4.30122 20.8681 3.97949 20.8681H3.11921L3.10522 19.1187H3.97949C4.08207 19.1187 4.17066 19.0883 4.24527 19.0274C4.32453 18.9665 4.39447 18.8822 4.45509 18.7745C4.52037 18.662 4.57865 18.5286 4.62994 18.374C4.6859 18.2147 4.74185 18.0391 4.7978 17.8471C4.89106 17.5098 5.00296 17.1633 5.13352 16.8073C5.26408 16.4466 5.4366 16.1188 5.65108 15.8237C5.87023 15.5286 6.14534 15.2874 6.47639 15.1001C6.80745 14.908 7.21777 14.812 7.70735 14.812Z"
        fill="#4B416A"
      />
      <path
        d="M9.23923 11.3995C8.86621 11.3995 8.50718 11.355 8.16213 11.266C7.81709 11.177 7.4907 11.0506 7.18296 10.8866C6.87988 10.7227 6.59778 10.5213 6.33667 10.2824C6.08022 10.0436 5.8564 9.77425 5.66523 9.47449C5.44142 9.10916 5.2689 8.70167 5.14767 8.25204C5.02644 7.80708 4.96582 7.34105 4.96582 6.85394C4.96582 6.54482 4.98447 6.24506 5.02177 5.95467C5.05908 5.66427 5.11736 5.36686 5.19663 5.06242C5.28056 4.75797 5.3878 4.43948 5.51836 4.10694C5.65358 3.77439 5.81677 3.40906 6.00794 3.01094L7.58162 3.76268C7.41376 4.10459 7.27388 4.41138 7.16197 4.68303C7.05007 4.95469 6.95914 5.21229 6.8892 5.45585C6.81926 5.69472 6.76797 5.92656 6.73533 6.15138C6.70736 6.37152 6.69337 6.60336 6.69337 6.84692C6.69337 7.16541 6.733 7.46985 6.81227 7.76024C6.89153 8.05532 7.00111 8.31995 7.14099 8.55414C7.3648 8.88668 7.65856 9.15131 8.02225 9.34803C8.39061 9.54943 8.79627 9.65013 9.23923 9.65013H10.659C11.1533 9.65013 11.5543 9.59861 11.862 9.49557C12.1744 9.39252 12.4169 9.24499 12.5894 9.05295C12.7619 8.8656 12.8785 8.63844 12.9391 8.37147C13.0044 8.1045 13.037 7.80942 13.037 7.48624V2.75802H14.7786V7.48624C14.7786 8.79301 14.4335 9.77191 13.7434 10.4229C13.058 11.074 12.0299 11.3995 10.659 11.3995H9.23923ZM9.09934 2.21002L10.3583 0.931366L11.6452 2.22407L10.3723 3.50273L9.09934 2.21002Z"
        fill="#4B416A"
      />
    </svg>
  );
  const addRemoveLoadingSvg = (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      style={{
        margin: "auto",
        background: "transparent",
        display: "block",
        shapeRendering: "auto",
        marginRight: "-5px",
        marginLeft: "-5px",
      }}
      width="40px"
      height="40px"
      viewBox="0 0 100 100"
      preserveAspectRatio="xMidYMid"
    >
      <circle
        cx="50"
        cy="50"
        r="32"
        strokeWidth="8"
        stroke="#a698cf"
        strokeDasharray="50.26548245743669 50.26548245743669"
        fill="none"
        strokeLinecap="round"
      >
        <animateTransform
          attributeName="transform"
          type="rotate"
          repeatCount="indefinite"
          dur="1s"
          keyTimes="0;1"
          values="0 50 50;360 50 50"
        />
      </circle>
    </svg>
  );
  const plusSvg = (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="18"
      fill="#a698cf"
    >
      <path d="M19 11h-6V5h-2v6H5v2h6v6h2v-6h6z"></path>
    </svg>
  );

  const minusSvg = (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="16"
      fill="#a698cf"
    >
      <path d="M5 11h14v2H5z"></path>
    </svg>
  );

  const price = numberWithCommas(props.price);
  const finalPrice = numberWithCommas(props.finalPrice);

  function svgColorHandler1(color) {
    setSvgFill1(color);
  }
  function svgColorHandler2(color) {
    setSvgFill2(color);
  }
  function svgColorHandler3(color) {
    setSvgFill3(color);
  }
  function colorsAtiveChange(color) {
    setColorPollet(color);
  }
  function activeThumblerHandler(value, url) {
    setActiveThumbler(value);
    setThumblersImage(url);
  }

  function numberWithCommas(x) {
    return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, "٬");
  }

  async function sendToShoppingCartHandler() {
    dispatch(changeNumber(1));
    setShowLoading(true);
    const shoppingCartData = {
      title: props.title,
      src: props.imageUrl,
      number: 1,
      code: props.code,
      price: props.price,
      finalPrice: props.finalPrice,
      colors: colorPollet,
      guarantee: props.guarantee,
      category: props.category,
    };

    if (cookieVal) {
      const userMobile = cookieVal;
      const response = await fetch("/api/sendToShoppingCart", {
        method: "POST",
        body: JSON.stringify({ shoppingCartData, userMobile }),
        headers: {
          "Content-Type": "application/json",
        },
      });

      const result = await response.json();
      dispatch(addProduct(result));
      setShowLoading(false);
      setShoppingCartChange(true);
      console.log(result);
    } else {
      router.push("/user/login");
    }
  }

  async function shoppingCartPlusHandler(code) {
    if (cookieVal) {
      setShowPlusLoading(code);
      const userMobile = cookieVal;
      const response = await fetch("/api/shoppingCartPlus", {
        method: "POST",
        body: JSON.stringify({ userMobile, code }),
        headers: {
          "Content-Type": "application/json",
        },
      });

      const result = await response.json();

      const product = result.find((item) => item.code == code);

      dispatch(addProduct(result));

      dispatch(changeNumber(product.number));
      setShowPlusLoading("");
    }
  }

  async function shoppingCartMinusHandler(code) {
    if (cookieVal) {
      setShowMinusLoading(code);
      const userMobile = cookieVal;
      const response = await fetch("/api/shoppingCartMinus", {
        method: "POST",
        body: JSON.stringify({ userMobile, code }),
        headers: {
          "Content-Type": "application/json",
        },
      });
      const result = await response.json();

      const product = result.find((item) => item.code == code);

      dispatch(addProduct(result));

      dispatch(changeNumber(product.number));
      setShowMinusLoading("");
    }
  }

  function resetCartBtn() {
    if (initialValCode == props.code) {
      setShoppingCartChange(false);
      setRunAddToCartFunc(true);
    }
  }

  function scoresMeanHandler() {
    var j = 0;
    for (var i = 0; i < scoresArray.length; i++) {
      j += scoresArray[i].score;
    }

    const mean = j / scoresArray.length;
    setScoresMean(mean);
  }

  useEffect(() => {
    resetCartBtn();
  }, [initialValCode]);

  useEffect(() => {
    scoresMeanHandler();
  }, []);

  return (
    <div className={styles.product_part_1}>
      <div className={styles.product_part_1_left}>
        <div className={styles.product_part_1_left_share}>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="23"
            height="23"
            viewBox="0 0 23 23"
            fill="none"
            onClick={
              svgFill1 === "#585858"
                ? () => svgColorHandler1("#4B416A")
                : () => svgColorHandler1("#585858")
            }
          >
            <path
              opacity="0.4"
              fillRule="evenodd"
              clipRule="evenodd"
              d="M20.9282 21.7195C20.592 21.9165 20.2104 22.013 19.8251 21.9986C19.4399 21.9842 19.0658 21.8594 18.744 21.6379C18.6709 21.5876 18.6042 21.5279 18.5452 21.4603L11.4813 13.3513L4.45623 21.4581C4.3967 21.5268 4.32908 21.5874 4.25496 21.6383C3.93913 21.8554 3.57299 21.9794 3.19521 21.9973C2.81743 22.0152 2.44202 21.9263 2.10864 21.74C1.77526 21.5537 1.49627 21.2769 1.30114 20.9389C1.22268 20.8029 1.19069 20.6789 1.18271 20.6479L1.18225 20.6461C1.16933 20.5961 1.16152 20.5531 1.15707 20.5264C1.14796 20.4717 1.14212 20.4187 1.1382 20.3785C1.13003 20.2947 1.12343 20.1938 1.11775 20.0874C1.10621 19.8712 1.09586 19.5807 1.08647 19.2474C1.06764 18.5781 1.05187 17.7039 1.03919 16.8337C1.01382 15.0924 1.00053 13.3474 1.00003 13.245L0.999998 13.2393L1.00001 3.19147C1.00001 2.61026 1.22126 2.05285 1.61508 1.64187C2.0089 1.23088 2.54303 1 3.09997 1L19.8997 1C20.4566 1 20.9907 1.23089 21.3846 1.64187C21.7784 2.05285 21.9996 2.61026 21.9996 3.19147L21.9996 13.1955L21.9996 13.1955C22.0023 13.4941 21.9915 15.1716 21.9705 16.7949C21.9592 17.6666 21.9447 18.5421 21.9269 19.2127C21.9181 19.5468 21.9083 19.8376 21.8973 20.0541C21.8919 20.1607 21.8856 20.2613 21.8778 20.3445C21.8741 20.3845 21.8686 20.4363 21.8602 20.4894C21.856 20.5155 21.8489 20.5567 21.8371 20.6045C21.837 20.605 21.8369 20.6055 21.8367 20.606C21.8294 20.6359 21.8008 20.7525 21.7309 20.8823C21.5421 21.233 21.2643 21.5226 20.9282 21.7195ZM12.9967 11.833L19.8123 19.6569C19.8176 19.5112 19.8228 19.3417 19.8278 19.1523C19.8451 18.4973 19.8595 17.634 19.8707 16.7653C19.882 15.8976 19.89 15.0288 19.8949 14.3645C19.8973 14.0323 19.8989 13.7519 19.8997 13.5488C19.9004 13.3788 19.9003 13.2829 19.9003 13.2486C19.9003 13.2382 19.9003 13.2335 19.9003 13.2341C19.8999 13.2213 19.8997 13.2084 19.8997 13.1955L19.8997 3.19147L3.09997 3.19147L3.09997 13.2363C3.10064 13.3569 3.11385 15.0803 3.13891 16.8004C3.15155 17.6679 3.16714 18.5297 3.18553 19.183C3.1903 19.3525 3.1952 19.5059 3.2002 19.6403L10.1436 11.6278C10.2031 11.5591 10.2707 11.4986 10.3448 11.4476C10.6877 11.212 11.0893 11.0864 11.4998 11.0864C11.9104 11.0864 12.3119 11.212 12.6548 11.4476C12.8021 11.5489 12.9171 11.6823 12.9967 11.833Z"
              fill={svgFill1}
              stroke={svgFill1 === "#4B416A" && "#4B416A"}
              strokeWidth="1"
              strokeLinecap="round"
              strokeLinejoin="round"
            />
          </svg>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="22"
            height="24"
            viewBox="0 0 22 24"
            fill="none"
            onClick={
              svgFill2 === "#585858"
                ? () => svgColorHandler2("#4B416A")
                : () => svgColorHandler2("#585858")
            }
          >
            <g opacity="0.4">
              <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M6.55566 18.7778C6.55566 18.1641 7.05313 17.6667 7.66678 17.6667H14.3334C14.9471 17.6667 15.4446 18.1641 15.4446 18.7778C15.4446 19.9565 14.9763 21.087 14.1428 21.9205C13.3093 22.754 12.1788 23.2222 11.0001 23.2222C9.82137 23.2222 8.69091 22.754 7.85741 21.9205C7.02392 21.087 6.55566 19.9565 6.55566 18.7778ZM9.0756 19.8889C9.17188 20.0557 9.29023 20.2106 9.42876 20.3491C9.84551 20.7659 10.4107 21 11.0001 21C11.5895 21 12.1547 20.7659 12.5715 20.3491C12.71 20.2106 12.8283 20.0557 12.9246 19.8889H9.0756Z"
                fill={svgFill2}
                stroke={svgFill2 === "#4B416A" && "#4B416A"}
                strokeLinecap="round"
                strokeLinejoin="round"
              />
              <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M11 3.22222C9.52658 3.22222 8.1135 3.80754 7.07163 4.84941C6.02976 5.89128 5.44445 7.30435 5.44445 8.77778V13.2222C5.44445 13.5169 5.32738 13.7995 5.11901 14.0079L3.58616 15.5407C3.47064 15.6564 3.37904 15.7937 3.31659 15.9448C3.25415 16.0959 3.22208 16.2578 3.22222 16.4212C3.22222 16.7513 3.35333 17.0688 3.58671 17.3022C3.82009 17.5356 4.13662 17.6667 4.46667 17.6667H17.5333C17.8634 17.6667 18.1799 17.5356 18.4133 17.3022C18.6467 17.0688 18.7778 16.7523 18.7778 16.4222C18.7779 16.2587 18.7459 16.0959 18.6834 15.9448C18.621 15.7937 18.5294 15.6564 18.4138 15.5407L16.881 14.0079C16.6726 13.7995 16.5556 13.5169 16.5556 13.2222V8.77778C16.5556 7.30435 15.9702 5.89128 14.9284 4.84941C13.8865 3.80754 12.4734 3.22222 11 3.22222ZM21 16.4232C20.9997 17.3423 20.6345 18.2236 19.9846 18.8735C19.3345 19.5237 18.4528 19.8889 17.5333 19.8889H4.46667C3.54725 19.8889 2.66549 19.5237 2.01536 18.8735C1.36547 18.2236 1.00026 17.3423 1 16.4232C1 16.4231 1 16.4233 1 16.4232C0.999657 15.9679 1.08898 15.5167 1.26289 15.0959C1.43685 14.6751 1.69202 14.2926 2.01384 13.9704L3.22222 12.762V8.77778C3.22222 6.71498 4.04167 4.73667 5.50028 3.27806C6.9589 1.81944 8.93721 1 11 1C13.0628 1 15.0411 1.81944 16.4997 3.27806C17.9583 4.73668 18.7778 6.71498 18.7778 8.77778V12.762L19.9857 13.9699C20.3075 14.2921 20.5632 14.6751 20.7371 15.0959C20.9111 15.5168 21.0004 15.9678 21 16.4232Z"
                fill={svgFill2}
              />
              <path
                d="M3.22222 16.4212C3.22208 16.2578 3.25415 16.0959 3.31659 15.9448C3.37904 15.7937 3.47064 15.6564 3.58616 15.5407L5.11901 14.0079C5.32738 13.7995 5.44445 13.5169 5.44445 13.2222V8.77778C5.44445 7.30435 6.02976 5.89128 7.07163 4.84941C8.1135 3.80754 9.52658 3.22222 11 3.22222C12.4734 3.22222 13.8865 3.80754 14.9284 4.84941C15.9702 5.89128 16.5556 7.30435 16.5556 8.77778V13.2222C16.5556 13.5169 16.6726 13.7995 16.881 14.0079L18.4138 15.5407C18.5294 15.6564 18.621 15.7937 18.6834 15.9448C18.7459 16.0959 18.7779 16.2587 18.7778 16.4222M3.22222 16.4212L2.11111 16.4222M3.22222 16.4212C3.22222 16.7513 3.35333 17.0688 3.58671 17.3022C3.82009 17.5356 4.13662 17.6667 4.46667 17.6667H17.5333C17.8634 17.6667 18.1799 17.5356 18.4133 17.3022C18.6467 17.0688 18.7778 16.7523 18.7778 16.4222M18.7778 16.4222H19.8889M1 16.4232C1.00026 17.3423 1.36547 18.2236 2.01536 18.8735C2.66549 19.5237 3.54725 19.8889 4.46667 19.8889H17.5333C18.4528 19.8889 19.3345 19.5237 19.9846 18.8735C20.6345 18.2236 20.9997 17.3423 21 16.4232C21.0004 15.9678 20.9111 15.5168 20.7371 15.0959C20.5632 14.6751 20.3075 14.2921 19.9857 13.9699L18.7778 12.762V8.77778C18.7778 6.71498 17.9583 4.73668 16.4997 3.27806C15.0411 1.81944 13.0628 1 11 1C8.93721 1 6.9589 1.81944 5.50028 3.27806C4.04167 4.73667 3.22222 6.71498 3.22222 8.77778V12.762L2.01384 13.9704C1.69202 14.2926 1.43685 14.6751 1.26289 15.0959C1.08898 15.5167 0.999657 15.9679 1 16.4232ZM1 16.4232C1 16.4233 1 16.4231 1 16.4232Z"
                stroke={svgFill2 === "#4B416A" && "#4B416A"}
                strokeLinecap="round"
                strokeLinejoin="round"
              />
            </g>
          </svg>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            onClick={
              svgFill3 === "#585858"
                ? () => svgColorHandler3("#4B416A")
                : () => svgColorHandler3("#585858")
            }
          >
            <g opacity="0.4">
              <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M15.9023 6.58839C16.131 7.11326 15.9445 7.75087 15.4858 8.01251L9.34225 11.5168C8.88355 11.7784 8.32634 11.5651 8.09768 11.0402C7.86902 10.5153 8.05551 9.8777 8.51421 9.61606L14.6577 6.11177C15.1164 5.85012 15.6737 6.06351 15.9023 6.58839ZM8.09818 12.9481C8.32739 12.4235 8.88483 12.2109 9.34326 12.4732L15.4868 15.9881C15.9452 16.2503 16.131 16.8882 15.9018 17.4128C15.6726 17.9373 15.1152 18.1499 14.6567 17.8877L8.5132 14.3728C8.05478 14.1105 7.86897 13.4726 8.09818 12.9481Z"
                fill={svgFill3}
                stroke={svgFill3 === "#4B416A" && "#4B416A"}
                strokeLinecap="round"
                strokeLinejoin="round"
              />
              <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M16.9162 1.33493C17.7202 1.00191 18.6049 0.914772 19.4584 1.08455C20.3119 1.25432 21.0959 1.67338 21.7113 2.28873C22.3266 2.90408 22.7457 3.68809 22.9155 4.5416C23.0852 5.39512 22.9981 6.27981 22.6651 7.08381C22.332 7.8878 21.7681 8.57499 21.0445 9.05847C20.3209 9.54194 19.4702 9.8 18.6 9.8C17.433 9.8 16.3139 9.33643 15.4887 8.51127C14.6636 7.68611 14.2 6.56695 14.2 5.4C14.2 4.52976 14.4581 3.67907 14.9415 2.95549C15.425 2.23192 16.1122 1.66796 16.9162 1.33493ZM19.0292 3.24227C18.6024 3.15739 18.1601 3.20095 17.7581 3.36747C17.3561 3.53398 17.0125 3.81596 16.7708 4.17775C16.529 4.53954 16.4 4.96488 16.4 5.4C16.4 5.98348 16.6318 6.54306 17.0444 6.95564C17.4569 7.36822 18.0165 7.6 18.6 7.6C19.0351 7.6 19.4605 7.47097 19.8223 7.22923C20.184 6.98749 20.466 6.6439 20.6325 6.2419C20.799 5.83991 20.8426 5.39756 20.7577 4.9708C20.6728 4.54404 20.4633 4.15204 20.1556 3.84437C19.848 3.53669 19.456 3.32716 19.0292 3.24227ZM5.4 9.8C4.81652 9.8 4.25694 10.0318 3.84436 10.4444C3.43178 10.8569 3.2 11.4165 3.2 12C3.2 12.4351 3.32903 12.8605 3.57077 13.2223C3.81251 13.584 4.1561 13.866 4.5581 14.0325C4.96009 14.199 5.40244 14.2426 5.8292 14.1577C6.25596 14.0728 6.64796 13.8633 6.95564 13.5556C7.26331 13.248 7.47284 12.856 7.55773 12.4292C7.64261 12.0024 7.59905 11.5601 7.43253 11.1581C7.26602 10.7561 6.98404 10.4125 6.62225 10.1708C6.26047 9.92903 5.83512 9.8 5.4 9.8ZM2.28873 8.88873C3.11389 8.06357 4.23305 7.6 5.4 7.6C6.27024 7.6 7.12093 7.85806 7.84451 8.34153C8.56808 8.82501 9.13204 9.5122 9.46507 10.3162C9.7981 11.1202 9.88523 12.0049 9.71546 12.8584C9.54568 13.7119 9.12662 14.4959 8.51127 15.1113C7.89592 15.7266 7.11191 16.1457 6.2584 16.3155C5.40488 16.4852 4.52019 16.3981 3.71619 16.0651C2.9122 15.732 2.22501 15.1681 1.74153 14.4445C1.25806 13.7209 1 12.8702 1 12C1 10.833 1.46357 9.71389 2.28873 8.88873ZM15.4887 15.4887C16.3139 14.6636 17.433 14.2 18.6 14.2C19.4702 14.2 20.3209 14.4581 21.0445 14.9415C21.7681 15.425 22.332 16.1122 22.6651 16.9162C22.9981 17.7202 23.0852 18.6049 22.9155 19.4584C22.7457 20.3119 22.3266 21.0959 21.7113 21.7113C21.0959 22.3266 20.3119 22.7457 19.4584 22.9155C18.6049 23.0852 17.7202 22.9981 16.9162 22.6651C16.1122 22.332 15.425 21.7681 14.9415 21.0445C14.4581 20.3209 14.2 19.4702 14.2 18.6C14.2 17.433 14.6636 16.3139 15.4887 15.4887ZM18.6 16.4C18.0165 16.4 17.4569 16.6318 17.0444 17.0444C16.6318 17.4569 16.4 18.0165 16.4 18.6C16.4 19.0351 16.529 19.4605 16.7708 19.8223C17.0125 20.184 17.3561 20.466 17.7581 20.6325C18.1601 20.799 18.6024 20.8426 19.0292 20.7577C19.456 20.6728 19.848 20.4633 20.1556 20.1556C20.4633 19.848 20.6728 19.456 20.7577 19.0292C20.8426 18.6024 20.799 18.1601 20.6325 17.7581C20.466 17.3561 20.184 17.0125 19.8223 16.7708C19.4605 16.529 19.0351 16.4 18.6 16.4Z"
                fill={svgFill3}
                stroke={svgFill3 === "#4B416A" && "#4B416A"}
                strokeLinecap="round"
                strokeLinejoin="round"
              />
            </g>
          </svg>
        </div>
        <div style={css} className={styles.product_part_1_left_image}>
          <Image
            alt=""
            src={`${thumblersImage}?q=100`}
            width="0"
            height="0"
            layout="responsive"
            draggable={false}
          />
        </div>
      </div>
      <div className={styles.product_part_1_middle}>
        <p className={styles.product_part_1_middle_title}>{props.title}</p>
        <div className={styles.product_part_1_middle_price_score}>
          <div className={styles.product_part_1_middle_price}>
            {price} {priceSvg}
          </div>
          <div className={styles.product_part_1_middle_score}>
            {scoresMean ? scoresMean : "5"}
            <svg
              width="20"
              height="18"
              viewBox="0 0 20 18"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M18.2773 1.73085C17.7357 1.18254 17.0908 0.747214 16.3799 0.450102C15.6689 0.15299 14.9061 0 14.1356 0C13.3651 0 12.6023 0.15299 11.8913 0.450102C11.1804 0.747214 10.5354 1.18254 9.99388 1.73085C9.45234 1.18254 8.80741 0.747214 8.09646 0.450102C7.3855 0.15299 6.62268 0 5.85219 0C5.08169 0 4.31887 0.15299 3.60791 0.450102C2.89696 0.747214 2.25203 1.18254 1.71049 1.73085C0.61444 2.84318 0 4.34235 0 5.90427C0 7.46619 0.61444 8.96537 1.71049 10.0777L9.28359 17.704C9.37659 17.7978 9.48724 17.8722 9.60915 17.923C9.73106 17.9738 9.86182 18 9.99388 18C10.1259 18 10.2567 17.9738 10.3786 17.923C10.5005 17.8722 10.6112 17.7978 10.7042 17.704L18.2773 10.0777C19.3806 8.96919 20 7.46858 20 5.90427C20 4.33996 19.3806 2.83936 18.2773 1.73085Z"
                fill="#fdfdfd"
              />
            </svg>
          </div>
        </div>
        <div className={styles.product_part_1_middle_shopping_cart_guarantee}>
          <button
            className={
              shoppingCartChange || showLoading
                ? `${styles.product_part_1_middle_shopping_cart} ${styles.hide}`
                : props.stock === 0
                ? `${styles.product_part_1_middle_shopping_cart} ${styles.disabled_shopping_cart}`
                : styles.product_part_1_middle_shopping_cart
            }
            onClick={() => {
              runAddToCartFunc && props.stock !== 0
                ? sendToShoppingCartHandler()
                : undefined;
            }}
          >
            <svg
              width="26"
              height="26"
              viewBox="0 0 26 26"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
              style={props.stock === 0 ? { display: "none" } : undefined}
            >
              <path
                d="M18 19V14M13 19V14V19ZM8 19V14V19Z"
                stroke="#FDFDFD"
                strokeWidth="2.5"
                strokeLinecap="round"
                strokeLinejoin="round"
              />
              <path
                d="M16.6667 2L19.1111 9.3333M20.5167 23.9999H5.48333C5.19038 24.0037 4.90582 23.9021 4.68148 23.7136C4.45714 23.5252 4.30796 23.2624 4.26111 22.9732L2 9.3333H24L21.7267 22.9732C21.6801 23.2604 21.5327 23.5215 21.3109 23.7096C21.0892 23.8978 20.8075 24.0007 20.5167 23.9999V23.9999ZM9.33333 2L6.88889 9.3333L9.33333 2Z"
                stroke="#FDFDFD"
                strokeWidth="2.5"
                strokeLinecap="round"
                strokeLinejoin="round"
              />
            </svg>
            {props.stock === 0 ? "ناموجود" : "افزودن به سبد"}
          </button>
          <button
            className={
              showLoading
                ? styles.product_part_1_middle_shopping_cart
                : `${styles.product_part_1_middle_shopping_cart} ${styles.hide}`
            }
          >
            <BeatLoader
              color="#fff"
              loading={showLoading}
              margin={2}
              size={13}
              speedMultiplier={1}
            />
          </button>
          <div
            className={
              shoppingCartChange
                ? styles.product_part_1_middle_shopping_cart_edit
                : `${styles.product_part_1_middle_shopping_cart_edit} ${styles.hide}`
            }
          >
            <button
              onClick={() =>
                showPlusLoading !== "" || cartProductNumber == props.stock
                  ? undefined
                  : shoppingCartPlusHandler(props.code)
              }
            >
              {showPlusLoading == props.code ? addRemoveLoadingSvg : plusSvg}
            </button>
            <p>{cartProductNumber}</p>
            <button
              onClick={() =>
                showMinusLoading !== "" || cartProductNumber == 1
                  ? undefined
                  : shoppingCartMinusHandler(props.code)
              }
            >
              {showMinusLoading == props.code ? addRemoveLoadingSvg : minusSvg}
            </button>
          </div>
          <div className={styles.product_part_1_middle_guarantee}>
            <svg
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M22.5731 3.3099C23.0885 3.76958 23.1452 4.57331 22.6996 5.10507L13.1017 16.5596C12.8674 16.8391 12.527 16.9999 12.1688 17C11.8107 17.0001 11.4701 16.8397 11.2357 16.5603L6.30102 10.6804C5.85505 10.1489 5.91108 9.34518 6.42618 8.88509C6.94128 8.42499 7.72039 8.48281 8.16636 9.01421L12.1676 13.782L20.833 3.44042C21.2786 2.90866 22.0576 2.85022 22.5731 3.3099Z"
                fill="#A698CF"
              />
              <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M12 2.4C10.1013 2.4 8.24524 2.96303 6.66653 4.01789C5.08782 5.07275 3.85736 6.57207 3.13076 8.32624C2.40416 10.0804 2.21405 12.0106 2.58447 13.8729C2.95488 15.7351 3.8692 17.4456 5.21178 18.7882C6.55436 20.1308 8.26492 21.0451 10.1271 21.4155C11.9894 21.786 13.9196 21.5958 15.6738 20.8692C17.4279 20.1426 18.9272 18.9122 19.9821 17.3335C21.037 15.7548 21.6 13.8987 21.6 12C21.6 11.3373 22.1373 10.8 22.8 10.8C23.4627 10.8 24 11.3373 24 12C24 14.3734 23.2962 16.6934 21.9776 18.6668C20.6591 20.6402 18.7849 22.1783 16.5922 23.0865C14.3995 23.9948 11.9867 24.2324 9.65892 23.7694C7.33115 23.3064 5.19295 22.1635 3.51472 20.4853C1.83649 18.807 0.693605 16.6689 0.230582 14.3411C-0.232441 12.0133 0.00519934 9.60051 0.913451 7.4078C1.8217 5.21508 3.35977 3.34094 5.33316 2.02236C7.30655 0.703788 9.62663 0 12 0C12.6627 0 13.2 0.537258 13.2 1.2C13.2 1.86274 12.6627 2.4 12 2.4Z"
                fill="#A698CF"
              />
            </svg>
            {props.guarantee}
          </div>
        </div>
        <div className={styles.product_part_1_middle_colors}>
          انتخاب رنگ
          <div>
            {props.colors.map((color, index) => {
              return (
                <div
                  key={index}
                  style={{
                    backgroundColor: color.hex,
                    width: "34.26px",
                    height: "34.26px",
                    borderRadius: "5px",
                  }}
                  className={
                    color.hex === colorPollet.hex
                      ? styles.active_color
                      : color.hex === "#FDFDFD"
                      ? styles.colors_white
                      : undefined
                  }
                  onClick={() => colorsAtiveChange(color)}
                ></div>
              );
            })}
          </div>
        </div>
        <div className={styles.product_part_1_middle_gallary_thumbles}>
          <div style={css2}>
            <Image
              alt=""
              src={`${props.imageUrl}?q=100`}
              width="0"
              height="0"
              layout="responsive"
              draggable={false}
              onClick={() => activeThumblerHandler("left", props.imageUrl)}
            />
          </div>
          <div style={css2} className={styles.disable_thumble}>
            <Image
              alt=""
              src={`${props.imageUrl}?q=100`}
              width="0"
              height="0"
              layout="responsive"
              draggable={false}
              onClick={() =>
                activeThumblerHandler(
                  "right",
                  "/images/categories/bed-services/category-product-2.png"
                )
              }
            />
          </div>
          <div className={styles.gallery_open_sign}>
            <svg
              width="41"
              height="39"
              viewBox="0 0 41 39"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M0 0.47142H32.8857C37.304 0.47142 40.8857 4.05314 40.8857 8.47142V30.6314C40.8857 35.0497 37.304 38.6314 32.8857 38.6314H0V0.47142Z"
                fill="#A698CF"
              />
              <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M20.4428 10.0114C21.1014 10.0114 21.6353 10.5453 21.6353 11.2039V18.3589H28.7903C29.4489 18.3589 29.9828 18.8928 29.9828 19.5514C29.9828 20.21 29.4489 20.7439 28.7903 20.7439H21.6353V27.8989C21.6353 28.5575 21.1014 29.0914 20.4428 29.0914C19.7842 29.0914 19.2503 28.5575 19.2503 27.8989V20.7439H12.0953C11.4367 20.7439 10.9028 20.21 10.9028 19.5514C10.9028 18.8928 11.4367 18.3589 12.0953 18.3589H19.2503V11.2039C19.2503 10.5453 19.7842 10.0114 20.4428 10.0114Z"
                fill="#FDFDFD"
              />
            </svg>
          </div>
          <div
            className={
              activeThumbler === "left"
                ? styles.image_hover
                : `${styles.image_hover} ${styles.active_thumbler}`
            }
            onClick={() =>
              activeThumblerHandler(
                activeThumbler === "left" ? "right" : "left",
                thumblersImage === props.imageUrl
                  ? "/images/categories/bed-services/category-product-2.png"
                  : props.imageUrl
              )
            }
          ></div>
        </div>
      </div>
      <div className={styles.product_part_1_right}>
        <div className={styles.product_part_1_right_up}>
          <div>
            <svg
              width="25"
              height="25"
              viewBox="0 0 25 25"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M12.563 8.75745H12.4463"
                stroke="#A698CF"
                strokeWidth="2.5"
                strokeLinecap="round"
                strokeLinejoin="round"
              />
              <path
                d="M12.5044 16.2658V12.7653"
                stroke="#A698CF"
                strokeWidth="2.5"
                strokeLinecap="round"
                strokeLinejoin="round"
              />
              <path
                d="M2.1427 14.2269C2.41476 15.8584 3.06837 17.4026 4.0503 18.7337C5.03222 20.0648 6.31469 21.1452 7.79324 21.8867C9.27179 22.6282 10.9046 23.0101 12.5586 23.001C14.2127 22.992 15.8412 22.5923 17.3116 21.8346L21.2672 22.6514C21.4562 22.6901 21.6518 22.6812 21.8366 22.6257C22.0214 22.5702 22.1895 22.4697 22.3259 22.3333C22.4623 22.1969 22.5628 22.0288 22.6183 21.844C22.6738 21.6592 22.6827 21.4636 22.644 21.2746L21.8389 17.3073C22.5998 15.829 22.9987 14.1912 23.003 12.5286C23.0073 10.866 22.6168 9.22618 21.8636 7.74399C21.1104 6.26179 20.016 4.97962 18.6705 4.00295C17.325 3.02628 15.7669 2.38303 14.1242 2.12613C12.4816 1.86922 10.8014 2.00601 9.222 2.52522C7.64256 3.04443 6.20896 3.93124 5.03916 5.11268C3.86936 6.29412 2.99679 7.73643 2.49324 9.32093C1.98969 10.9054 1.86955 12.5869 2.1427 14.2269Z"
                stroke="#A698CF"
                strokeWidth="2.5"
                strokeLinecap="round"
                strokeLinejoin="round"
              />
            </svg>
            نکات مهم در هنگام خرید
          </div>
          <div>
            <svg
              width="20"
              height="20"
              viewBox="0 0 20 20"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <rect
                x="9.52295"
                width="13.537"
                height="13.4676"
                transform="rotate(45 9.52295 0)"
                fill="#A698CF"
              />
            </svg>
            <p>
              لورم ایپسوم متن ساختگی با تولید سادگی نامفهوم از صنعت چاپ و با
              استفاده از.
            </p>
          </div>
          <div>
            <svg
              width="20"
              height="20"
              viewBox="0 0 20 20"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <rect
                x="9.52295"
                width="13.537"
                height="13.4676"
                transform="rotate(45 9.52295 0)"
                fill="#A698CF"
              />
            </svg>
            <p>
              لورم ایپسوم متن ساختگی با تولید سادگی نامفهوم از صنعت چاپ و با
              استفاده از.
            </p>
          </div>
        </div>
        <div className={styles.product_part_1_right_down}>
          <div>
            <svg
              width="25"
              height="25"
              viewBox="0 0 25 25"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M12.563 8.75745H12.4463"
                stroke="#A698CF"
                strokeWidth="2.5"
                strokeLinecap="round"
                strokeLinejoin="round"
              />
              <path
                d="M12.5044 16.2658V12.7653"
                stroke="#A698CF"
                strokeWidth="2.5"
                strokeLinecap="round"
                strokeLinejoin="round"
              />
              <path
                d="M2.1427 14.2269C2.41476 15.8584 3.06837 17.4026 4.0503 18.7337C5.03222 20.0648 6.31469 21.1452 7.79324 21.8867C9.27179 22.6282 10.9046 23.0101 12.5586 23.001C14.2127 22.992 15.8412 22.5923 17.3116 21.8346L21.2672 22.6514C21.4562 22.6901 21.6518 22.6812 21.8366 22.6257C22.0214 22.5702 22.1895 22.4697 22.3259 22.3333C22.4623 22.1969 22.5628 22.0288 22.6183 21.844C22.6738 21.6592 22.6827 21.4636 22.644 21.2746L21.8389 17.3073C22.5998 15.829 22.9987 14.1912 23.003 12.5286C23.0073 10.866 22.6168 9.22618 21.8636 7.74399C21.1104 6.26179 20.016 4.97962 18.6705 4.00295C17.325 3.02628 15.7669 2.38303 14.1242 2.12613C12.4816 1.86922 10.8014 2.00601 9.222 2.52522C7.64256 3.04443 6.20896 3.93124 5.03916 5.11268C3.86936 6.29412 2.99679 7.73643 2.49324 9.32093C1.98969 10.9054 1.86955 12.5869 2.1427 14.2269Z"
                stroke="#A698CF"
                strokeWidth="2.5"
                strokeLinecap="round"
                strokeLinejoin="round"
              />
            </svg>
            نکات مهم در هنگام خرید
          </div>
          <div>
            <svg
              width="20"
              height="20"
              viewBox="0 0 20 20"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <rect
                x="9.52295"
                width="13.537"
                height="13.4676"
                transform="rotate(45 9.52295 0)"
                fill="#A698CF"
              />
            </svg>
            <p>
              لورم ایپسوم متن ساختگی با تولید سادگی نامفهوم از صنعت چاپ و با
              استفاده از لور ایپسوم متن ساختگی.
            </p>
          </div>
        </div>
      </div>
    </div>
  );
}

export default ProductDetailPart1;

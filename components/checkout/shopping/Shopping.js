import { useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import Cookies from "js-cookie";
import Image from "next/image";
import Link from "next/link";
import { useRouter } from "next/router";

import styles from "./Shopping.module.css";

import { changeCond } from "../../../redux/shoppingPageHover";
import CompleteUserForm from "./complete-user-form/CompleteUserForm";

import { addProduct } from "../../../redux/shoppingCart";

function ShoppingChild(props) {
  const router = useRouter();
  const cookieVal = Cookies.get("customer");
  const dispatch = useDispatch();
  const addresses = useSelector((state) => state.addAddress[0]);
  const shoppingCartProducts = useSelector((state) => state.shoppingCart[0]);
  const finalPrice = props.price;
  const cartProductLoad = props.cartProductLoadCond;
  const [showLoading, setShowLoading] = useState(false);
  const [payMethod, setPayMethod] = useState("online");
  const [showHoverOpenerBtn, setShopping_hover_opener_btn] = useState(false);
  const [addressInputChecked, setAddressInputChecked] = useState("");
  const runAddFuncAddress = props.runAddFuncAddress;
  const cartProductsSave = [];
  const whiteToman = (
    <svg
      width="23"
      height="23"
      viewBox="0 0 23 23"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M12.1827 20.4164C12.5221 20.4164 12.8233 20.4036 13.0864 20.3781C13.3536 20.3568 13.5891 20.3227 13.7927 20.2758C14.0006 20.2332 14.1809 20.1757 14.3336 20.1032C14.4906 20.035 14.6264 19.9519 14.7409 19.8539C14.9191 19.709 15.0527 19.5407 15.1418 19.3489C15.2351 19.1572 15.2903 18.8993 15.3073 18.5755H14.3273C14.1151 18.5755 13.8988 18.5584 13.6782 18.5243C13.4576 18.4902 13.2454 18.4327 13.0418 18.3517C12.8382 18.2665 12.6451 18.1578 12.4627 18.0257C12.2845 17.8936 12.1276 17.7317 11.9918 17.5399C11.8603 17.3439 11.7542 17.1138 11.6736 16.8495C11.5973 16.5853 11.5591 16.2828 11.5591 15.9418C11.5591 15.6478 11.5845 15.3878 11.6354 15.162C11.6864 14.9319 11.75 14.7294 11.8264 14.5547C11.907 14.38 11.9961 14.2287 12.0936 14.1009C12.1912 13.9688 12.2845 13.8537 12.3736 13.7557C12.6282 13.5 12.9167 13.304 13.2391 13.1676C13.5615 13.027 13.9094 12.9566 14.2827 12.9566C14.7451 12.9566 15.1397 13.0376 15.4664 13.1996C15.7973 13.3572 16.0667 13.5767 16.2745 13.858C16.4867 14.1392 16.6415 14.4737 16.7391 14.8615C16.8367 15.2451 16.8854 15.6627 16.8854 16.1144V16.9838H17.9673V18.5755H16.8791C16.8621 19.1593 16.7582 19.6515 16.5673 20.0521C16.3806 20.4527 16.1006 20.8021 15.7273 21.1004C15.5321 21.2538 15.32 21.3859 15.0909 21.4967C14.8618 21.6118 14.6051 21.7077 14.3209 21.7844C14.0367 21.8611 13.7185 21.9165 13.3664 21.9506C13.0185 21.9889 12.6239 22.0081 12.1827 22.0081V20.4164ZM14.2827 14.5483C13.9221 14.5483 13.6357 14.6613 13.4236 14.8871C13.2115 15.113 13.1054 15.4646 13.1054 15.9418C13.1054 16.1293 13.1415 16.2892 13.2136 16.4213C13.29 16.5534 13.3854 16.662 13.5 16.7473C13.6188 16.8282 13.7503 16.8879 13.8945 16.9262C14.0388 16.9646 14.183 16.9838 14.3273 16.9838H15.3073V16.1144C15.3073 15.8715 15.2882 15.6648 15.25 15.4944C15.2118 15.3197 15.1609 15.1748 15.0973 15.0597C15.0379 14.9446 14.9679 14.853 14.8873 14.7848C14.8109 14.7167 14.7345 14.6655 14.6582 14.6314C14.5861 14.5973 14.5161 14.576 14.4482 14.5675C14.3803 14.5547 14.3251 14.5483 14.2827 14.5483Z"
        fill="#FDFDFD"
      />
      <path
        d="M22.3836 13.2059C22.3921 13.2358 22.4091 13.3061 22.4345 13.4169C22.4642 13.5277 22.4961 13.6641 22.53 13.826C22.5639 13.9837 22.5979 14.1605 22.6318 14.3566C22.67 14.5526 22.7039 14.7507 22.7336 14.951C22.7676 15.1471 22.793 15.3388 22.81 15.5263C22.8312 15.7138 22.8418 15.8779 22.8418 16.0185C22.8418 16.4575 22.7697 16.8389 22.6254 17.1628C22.4812 17.4824 22.2924 17.7466 22.0591 17.9554C21.8257 18.1642 21.5627 18.3198 21.27 18.422C20.9815 18.5243 20.6909 18.5755 20.3982 18.5755H17.6554V16.9838H20.4427C20.4936 16.9838 20.5657 16.9774 20.6591 16.9646C20.7567 16.9476 20.8521 16.9071 20.9454 16.8432C21.043 16.7792 21.1279 16.6833 21.2 16.5555C21.2721 16.4234 21.3082 16.2444 21.3082 16.0185C21.3082 15.9248 21.2997 15.8119 21.2827 15.6798C21.27 15.5434 21.2509 15.3985 21.2254 15.2451C21.2 15.0917 21.1703 14.9361 21.1364 14.7784C21.1067 14.6165 21.077 14.4652 21.0473 14.3246C21.0176 14.1797 20.9879 14.0497 20.9582 13.9347C20.9285 13.8153 20.9051 13.7237 20.8882 13.6598L22.3836 13.2059ZM21.7854 11.9595L20.7164 10.8728L21.7727 9.77329L22.8673 10.8728L21.7854 11.9595ZM19.1191 11.9658L18.05 10.8792L19.1 9.77969L20.1945 10.8792L19.1191 11.9658Z"
        fill="#FDFDFD"
      />
      <path
        d="M3.09273 18.5755C2.62606 18.5755 2.22515 18.5457 1.89 18.486C1.55485 18.4306 1.27273 18.3475 1.04364 18.2367C0.814546 18.1217 0.63 17.9768 0.49 17.8021C0.354242 17.6273 0.250303 17.4228 0.178182 17.1884C0.10606 16.954 0.0572727 16.6898 0.0318182 16.3958C0.0106061 16.0974 0 15.7693 0 15.4113V9.35786H1.58455V15.4113C1.58455 15.7523 1.59515 16.025 1.61636 16.2296C1.64182 16.4341 1.70333 16.5939 1.80091 16.709C1.90273 16.8198 2.05333 16.8944 2.25273 16.9327C2.45636 16.9668 2.73636 16.9838 3.09273 16.9838V18.5755Z"
        fill="#FDFDFD"
      />
      <path
        d="M7.55985 17.3674C7.59803 17.3674 7.65743 17.361 7.73803 17.3482C7.82288 17.3312 7.90773 17.2843 7.99258 17.2076C8.07743 17.1309 8.15167 17.0137 8.21531 16.856C8.28318 16.6941 8.31712 16.4682 8.31712 16.1784C8.31712 16.0676 8.29591 15.927 8.25349 15.7565C8.21531 15.5818 8.14531 15.4135 8.04349 15.2515C7.94591 15.0853 7.81227 14.9447 7.64258 14.8296C7.47712 14.7103 7.26712 14.6507 7.01258 14.6507C6.79197 14.6507 6.61167 14.7167 6.47167 14.8488C6.33167 14.9809 6.21288 15.145 6.11531 15.341C6.02197 15.5371 5.94137 15.7501 5.87349 15.9803C5.80985 16.2061 5.73985 16.4128 5.66349 16.6003C5.82046 16.6898 5.98591 16.7814 6.15985 16.8752C6.33803 16.9647 6.51197 17.0456 6.68167 17.1181C6.85137 17.1905 7.01046 17.2502 7.15894 17.2971C7.31167 17.3439 7.4453 17.3674 7.55985 17.3674ZM7.01258 13.0654C7.45803 13.0654 7.84621 13.1485 8.17712 13.3147C8.51228 13.4809 8.78803 13.7046 9.0044 13.9859C9.225 14.2629 9.38834 14.5846 9.4944 14.9511C9.6047 15.3176 9.65985 15.7011 9.65985 16.1017C9.65985 16.5449 9.62167 16.922 9.54531 17.2331C9.46894 17.5442 9.36712 17.8021 9.23985 18.0066C9.11682 18.2112 8.9747 18.371 8.81349 18.486C8.65652 18.6053 8.49743 18.6927 8.33621 18.7481C8.17924 18.8078 8.02652 18.844 7.87803 18.8568C7.72955 18.8738 7.60227 18.8823 7.49621 18.8823C7.28409 18.8823 7.08258 18.861 6.89167 18.8184C6.70076 18.7801 6.50561 18.7225 6.30621 18.6458C6.11106 18.5734 5.90743 18.4839 5.69531 18.3774C5.48318 18.2666 5.25197 18.143 5.00167 18.0066C4.81076 18.2112 4.605 18.3582 4.3844 18.4477C4.16803 18.5329 3.91349 18.5755 3.62076 18.5755H2.83803L2.82531 16.9838H3.62076C3.71409 16.9838 3.7947 16.9561 3.86258 16.9007C3.9347 16.8453 3.99834 16.7686 4.05349 16.6706C4.11288 16.5683 4.16591 16.4469 4.21258 16.3063C4.26349 16.1614 4.3144 16.0016 4.36531 15.8268C4.45015 15.52 4.55197 15.2047 4.67076 14.8808C4.78955 14.5526 4.94652 14.2543 5.14167 13.9859C5.34106 13.7174 5.59137 13.4979 5.89258 13.3275C6.19379 13.1527 6.56712 13.0654 7.01258 13.0654Z"
        fill="#FDFDFD"
      />
      <path
        d="M8.40625 9.96049C8.06685 9.96049 7.74019 9.92001 7.42625 9.83904C7.11231 9.75807 6.81534 9.64301 6.53534 9.49386C6.25958 9.34471 6.00291 9.16146 5.76534 8.94412C5.53201 8.72678 5.32837 8.48175 5.15443 8.20901C4.95079 7.87661 4.79382 7.50586 4.68352 7.09676C4.57322 6.69191 4.51807 6.26789 4.51807 5.82469C4.51807 5.54343 4.53504 5.27069 4.56898 5.00648C4.60291 4.74227 4.65595 4.47166 4.72807 4.19466C4.80443 3.91766 4.90201 3.62788 5.02079 3.32531C5.14382 3.02275 5.29231 2.69035 5.46625 2.32812L6.89807 3.01209C6.74534 3.32318 6.61807 3.60231 6.51625 3.84948C6.41443 4.09665 6.3317 4.33103 6.26807 4.55263C6.20443 4.76997 6.15776 4.98091 6.12807 5.18547C6.10261 5.38576 6.08988 5.5967 6.08988 5.8183C6.08988 6.10808 6.12595 6.38508 6.19807 6.64929C6.27019 6.91777 6.36988 7.15855 6.49716 7.37162C6.70079 7.67419 6.96807 7.91497 7.29898 8.09395C7.63413 8.2772 8.00322 8.36882 8.40625 8.36882H9.69807C10.1478 8.36882 10.5126 8.32194 10.7926 8.22819C11.0769 8.13443 11.2975 8.0002 11.4544 7.82547C11.6114 7.65501 11.7175 7.44833 11.7726 7.20542C11.832 6.96252 11.8617 6.69404 11.8617 6.4V2.098H13.4462V6.4C13.4462 7.58896 13.1323 8.47962 12.5044 9.07197C11.8808 9.66432 10.9453 9.96049 9.69807 9.96049H8.40625ZM8.27898 1.5994L9.42443 0.436005L10.5953 1.61218L9.43716 2.77558L8.27898 1.5994Z"
        fill="#FDFDFD"
      />
    </svg>
  );
  const tomanSvg = (
    <svg
      width="23"
      height="22"
      viewBox="0 0 23 22"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M12.1827 20.0164C12.5221 20.0164 12.8233 20.0037 13.0864 19.9781C13.3536 19.9568 13.5891 19.9227 13.7927 19.8758C14.0006 19.8332 14.1809 19.7757 14.3336 19.7032C14.4906 19.635 14.6264 19.5519 14.7409 19.4539C14.9191 19.309 15.0527 19.1407 15.1418 18.9489C15.2351 18.7572 15.2903 18.4993 15.3073 18.1755H14.3273C14.1151 18.1755 13.8988 18.1584 13.6782 18.1243C13.4576 18.0902 13.2454 18.0327 13.0418 17.9517C12.8382 17.8665 12.6451 17.7578 12.4627 17.6257C12.2845 17.4936 12.1276 17.3317 11.9918 17.1399C11.8603 16.9439 11.7542 16.7138 11.6736 16.4495C11.5973 16.1853 11.5591 15.8828 11.5591 15.5418C11.5591 15.2478 11.5845 14.9878 11.6354 14.762C11.6864 14.5319 11.75 14.3294 11.8264 14.1547C11.907 13.98 11.9961 13.8287 12.0936 13.7009C12.1912 13.5688 12.2845 13.4537 12.3736 13.3557C12.6282 13.1 12.9167 12.904 13.2391 12.7676C13.5615 12.627 13.9094 12.5567 14.2827 12.5567C14.7451 12.5567 15.1397 12.6376 15.4664 12.7996C15.7973 12.9572 16.0667 13.1767 16.2745 13.458C16.4867 13.7392 16.6415 14.0738 16.7391 14.4615C16.8367 14.8451 16.8854 15.2627 16.8854 15.7144V16.5838H17.9673V18.1755H16.8791C16.8621 18.7593 16.7582 19.2515 16.5673 19.6521C16.3806 20.0527 16.1006 20.4021 15.7273 20.7004C15.5321 20.8538 15.32 20.9859 15.0909 21.0967C14.8618 21.2118 14.6051 21.3077 14.3209 21.3844C14.0367 21.4611 13.7185 21.5165 13.3664 21.5506C13.0185 21.5889 12.6239 21.6081 12.1827 21.6081V20.0164ZM14.2827 14.1483C13.9221 14.1483 13.6357 14.2613 13.4236 14.4871C13.2115 14.713 13.1054 15.0646 13.1054 15.5418C13.1054 15.7294 13.1415 15.8892 13.2136 16.0213C13.29 16.1534 13.3854 16.262 13.5 16.3473C13.6188 16.4282 13.7503 16.4879 13.8945 16.5263C14.0388 16.5646 14.183 16.5838 14.3273 16.5838H15.3073V15.7144C15.3073 15.4715 15.2882 15.2648 15.25 15.0944C15.2118 14.9197 15.1609 14.7748 15.0973 14.6597C15.0379 14.5446 14.9679 14.453 14.8873 14.3848C14.8109 14.3167 14.7345 14.2655 14.6582 14.2314C14.5861 14.1973 14.5161 14.176 14.4482 14.1675C14.3803 14.1547 14.3251 14.1483 14.2827 14.1483Z"
        fill="#585858"
      />
      <path
        d="M22.3836 12.806C22.3921 12.8358 22.4091 12.9061 22.4345 13.0169C22.4642 13.1277 22.4961 13.2641 22.53 13.426C22.5639 13.5837 22.5979 13.7605 22.6318 13.9566C22.67 14.1526 22.7039 14.3507 22.7336 14.551C22.7676 14.7471 22.793 14.9388 22.81 15.1263C22.8312 15.3139 22.8418 15.4779 22.8418 15.6186C22.8418 16.0575 22.7697 16.4389 22.6254 16.7628C22.4812 17.0824 22.2924 17.3466 22.0591 17.5554C21.8257 17.7642 21.5627 17.9198 21.27 18.022C20.9815 18.1243 20.6909 18.1755 20.3982 18.1755H17.6554V16.5838H20.4427C20.4936 16.5838 20.5657 16.5774 20.6591 16.5646C20.7567 16.5476 20.8521 16.5071 20.9454 16.4432C21.043 16.3792 21.1279 16.2833 21.2 16.1555C21.2721 16.0234 21.3082 15.8444 21.3082 15.6186C21.3082 15.5248 21.2997 15.4119 21.2827 15.2798C21.27 15.1434 21.2509 14.9985 21.2254 14.8451C21.2 14.6917 21.1703 14.5361 21.1364 14.3784C21.1067 14.2165 21.077 14.0652 21.0473 13.9246C21.0176 13.7797 20.9879 13.6497 20.9582 13.5347C20.9285 13.4153 20.9051 13.3237 20.8882 13.2598L22.3836 12.806ZM21.7854 11.5595L20.7164 10.4728L21.7727 9.3733L22.8673 10.4728L21.7854 11.5595ZM19.1191 11.5658L18.05 10.4792L19.1 9.37969L20.1945 10.4792L19.1191 11.5658Z"
        fill="#585858"
      />
      <path
        d="M3.09273 18.1755C2.62606 18.1755 2.22515 18.1457 1.89 18.086C1.55485 18.0306 1.27273 17.9475 1.04364 17.8367C0.814545 17.7217 0.63 17.5768 0.49 17.4021C0.354242 17.2273 0.250303 17.0228 0.178182 16.7884C0.10606 16.554 0.0572727 16.2898 0.0318182 15.9958C0.0106061 15.6975 0 15.3693 0 15.0113V8.95786H1.58455V15.0113C1.58455 15.3523 1.59515 15.625 1.61636 15.8296C1.64182 16.0341 1.70333 16.1939 1.80091 16.309C1.90273 16.4198 2.05333 16.4944 2.25273 16.5327C2.45636 16.5668 2.73636 16.5838 3.09273 16.5838V18.1755Z"
        fill="#585858"
      />
      <path
        d="M7.55985 16.9674C7.59803 16.9674 7.65743 16.961 7.73803 16.9482C7.82288 16.9312 7.90773 16.8843 7.99258 16.8076C8.07743 16.7309 8.15167 16.6137 8.21531 16.456C8.28318 16.2941 8.31712 16.0682 8.31712 15.7784C8.31712 15.6676 8.29591 15.527 8.25349 15.3565C8.2153 15.1818 8.14531 15.0135 8.04349 14.8515C7.94591 14.6853 7.81227 14.5447 7.64258 14.4296C7.47712 14.3103 7.26712 14.2507 7.01258 14.2507C6.79197 14.2507 6.61167 14.3167 6.47167 14.4488C6.33167 14.5809 6.21288 14.745 6.11531 14.941C6.02197 15.1371 5.94137 15.3501 5.87349 15.5803C5.80985 15.8061 5.73985 16.0128 5.66349 16.2003C5.82046 16.2898 5.98591 16.3814 6.15985 16.4752C6.33803 16.5647 6.51197 16.6456 6.68167 16.7181C6.85137 16.7905 7.01046 16.8502 7.15894 16.8971C7.31167 16.9439 7.44531 16.9674 7.55985 16.9674ZM7.01258 12.6654C7.45803 12.6654 7.84621 12.7485 8.17712 12.9147C8.51228 13.0809 8.78803 13.3046 9.0044 13.5859C9.225 13.8629 9.38834 14.1846 9.4944 14.5511C9.6047 14.9176 9.65985 15.3011 9.65985 15.7017C9.65985 16.1449 9.62167 16.5221 9.54531 16.8331C9.46894 17.1442 9.36712 17.4021 9.23985 17.6066C9.11682 17.8112 8.9747 17.971 8.81349 18.086C8.65652 18.2054 8.49743 18.2927 8.33621 18.3481C8.17924 18.4078 8.02652 18.444 7.87803 18.4568C7.72955 18.4738 7.60227 18.4824 7.49621 18.4824C7.28409 18.4824 7.08258 18.461 6.89167 18.4184C6.70076 18.3801 6.50561 18.3225 6.30621 18.2458C6.11106 18.1734 5.90743 18.0839 5.69531 17.9774C5.48318 17.8666 5.25197 17.743 5.00167 17.6066C4.81076 17.8112 4.605 17.9582 4.3844 18.0477C4.16803 18.1329 3.91349 18.1755 3.62076 18.1755H2.83803L2.82531 16.5838H3.62076C3.71409 16.5838 3.7947 16.5561 3.86258 16.5007C3.9347 16.4453 3.99834 16.3686 4.05349 16.2706C4.11288 16.1683 4.16591 16.0469 4.21258 15.9063C4.26349 15.7614 4.3144 15.6016 4.36531 15.4268C4.45015 15.12 4.55197 14.8047 4.67076 14.4808C4.78955 14.1527 4.94652 13.8543 5.14167 13.5859C5.34106 13.3174 5.59137 13.0979 5.89258 12.9275C6.19379 12.7527 6.56712 12.6654 7.01258 12.6654Z"
        fill="#585858"
      />
      <path
        d="M8.40625 9.5605C8.06685 9.5605 7.74019 9.52002 7.42625 9.43905C7.11231 9.35808 6.81534 9.24302 6.53534 9.09386C6.25958 8.94471 6.00291 8.76147 5.76534 8.54413C5.53201 8.32679 5.32837 8.08175 5.15443 7.80902C4.95079 7.47662 4.79382 7.10587 4.68352 6.69676C4.57322 6.29192 4.51807 5.86789 4.51807 5.4247C4.51807 5.14344 4.53504 4.8707 4.56898 4.60649C4.60291 4.34227 4.65595 4.07167 4.72807 3.79467C4.80443 3.51767 4.90201 3.22789 5.02079 2.92532C5.14382 2.62275 5.29231 2.29035 5.46625 1.92812L6.89807 2.6121C6.74534 2.92319 6.61807 3.20232 6.51625 3.44949C6.41443 3.69665 6.3317 3.93104 6.26807 4.15263C6.20443 4.36997 6.15776 4.58092 6.12807 4.78547C6.10261 4.98576 6.08988 5.19671 6.08988 5.41831C6.08988 5.70809 6.12595 5.98509 6.19807 6.2493C6.27019 6.51778 6.36988 6.75855 6.49716 6.97163C6.70079 7.2742 6.96807 7.51497 7.29898 7.69396C7.63413 7.8772 8.00322 7.96882 8.40625 7.96882H9.69807C10.1478 7.96882 10.5126 7.92195 10.7926 7.82819C11.0769 7.73444 11.2975 7.6002 11.4544 7.42548C11.6114 7.25502 11.7175 7.04834 11.7726 6.80543C11.832 6.56252 11.8617 6.29405 11.8617 6V1.698H13.4462V6C13.4462 7.18897 13.1323 8.07962 12.5044 8.67197C11.8808 9.26433 10.9453 9.5605 9.69807 9.5605H8.40625ZM8.27898 1.1994L9.42443 0.0360107L10.5953 1.21219L9.43716 2.37558L8.27898 1.1994Z"
        fill="#585858"
      />
    </svg>
  );
  const creditCardSvg = (
    <svg
      width="53"
      height="49"
      viewBox="0 0 53 49"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M42.1605 0.072788C42.0208 0.0985488 34.2747 1.51846 24.9469 3.22796C15.6191 4.93758 7.8032 6.38715 7.57833 6.44934C5.80368 6.93995 4.20516 8.6388 3.71437 10.5557C3.51905 11.3189 3.52413 12.6951 3.72645 13.8177C3.88064 14.6726 3.87973 14.7273 3.7099 14.8289C2.03693 15.8297 1.05474 17.1158 0.670899 18.8083C0.441247 19.8208 0.443888 43.4258 0.673743 44.4395C1.17124 46.6334 2.87062 48.3698 4.97385 48.8332C6.0053 49.0605 39.852 49.0531 40.8908 48.8254C42.7852 48.4102 44.3082 47.0098 45.0311 45.0186C45.2501 44.4148 45.2602 44.2291 45.3092 39.8549L45.3599 35.3176L46.8835 35.0286C47.7215 34.8696 48.6502 34.6431 48.9473 34.5254C51.1493 33.6528 52.6518 31.2313 52.4878 28.8197C52.4117 27.7008 48.4948 4.72853 48.2451 3.93618C47.4409 1.38532 44.6492 -0.387318 42.1605 0.072788ZM44.1947 3.54575C44.7877 3.88117 45.2341 4.45477 45.4002 5.09468C45.4637 5.33951 46.4094 10.8135 47.5017 17.259C48.9167 25.6101 49.4714 29.1071 49.4316 29.4271C49.3278 30.2619 48.7435 31.1008 47.992 31.4938C47.8197 31.584 47.2483 31.7347 46.7224 31.8286C46.1965 31.9226 45.6634 32.0255 45.5377 32.0575L45.3092 32.1155V25.7746C45.3092 21.584 45.2714 19.2439 45.1977 18.8742C44.8651 17.2041 43.6696 15.6405 42.1514 14.8901C41.6655 14.6499 41.0124 14.4213 40.6369 14.3597C40.2064 14.2892 34.2258 14.2513 23.448 14.2509L6.91923 14.25L6.87119 14.0125C6.56272 12.4869 6.52747 11.5995 6.75316 11.0381C6.95529 10.5353 7.55273 9.88229 8.0037 9.67134C8.59759 9.39357 42.4952 3.16599 43.1485 3.21466C43.477 3.23916 43.876 3.36543 44.1947 3.54575ZM40.7946 17.6992C41.8148 18.2669 42.1938 18.9728 42.2445 20.3999L42.281 21.4293H22.9104H3.53987L3.58314 20.3999C3.61584 19.6216 3.67851 19.2676 3.84001 18.9482C4.15265 18.3302 4.69514 17.8385 5.30883 17.6173C5.82643 17.4307 6.56627 17.4237 23.1159 17.4464L40.383 17.4701L40.7946 17.6992ZM42.262 26.7081V28.7141H22.9128H3.56354V26.7081V24.7022H22.9128H42.262V26.7081ZM42.262 37.7277C42.262 44.0508 42.2626 44.0431 41.7078 44.7993C41.5662 44.9922 41.2102 45.2885 40.9166 45.4575L40.383 45.7648H22.9128C6.06939 45.7648 5.4298 45.7578 5.0871 45.5682C4.59082 45.2938 4.09282 44.7845 3.83392 44.2867C3.61716 43.87 3.61391 43.7856 3.58568 37.8729L3.55714 31.8814H22.9095H42.262V37.7277ZM7.8032 39.5283C7.59315 39.6062 7.3502 39.7313 7.26325 39.8064C6.78039 40.2228 6.64895 41.24 7.0015 41.8318C7.43145 42.5535 7.37315 42.5447 11.7556 42.5443C15.537 42.544 15.7153 42.535 16.0383 42.3304C16.4849 42.0473 16.8124 41.2946 16.7176 40.769C16.6207 40.2318 16.2984 39.8077 15.8129 39.5785C15.4316 39.3986 15.0931 39.3823 11.7908 39.3844C9.03709 39.3862 8.09481 39.4202 7.8032 39.5283Z"
        fill={payMethod == "online" ? "#fdfdfd" : "#b5b5b5"}
      />
    </svg>
  );
  const homeWalletSvg = (
    <svg
      width="50"
      height="50"
      viewBox="0 0 50 50"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M23.3568 0.248329C21.5449 0.862271 6.27155 6.45437 5.91937 6.63274C4.71353 7.24356 3.94894 8.78989 4.19259 10.1249C4.24715 10.4237 4.44563 11.0809 4.63355 11.5851C4.82157 12.0894 4.97537 12.535 4.97537 12.5753C4.97537 12.6157 4.68293 12.7038 4.32537 12.7712C3.0244 13.0165 1.58967 13.9907 0.862724 15.1225C0.68859 15.3935 0.431837 15.9088 0.292021 16.2676L0.0378103 16.92L0.0114115 31.0307C-0.0144007 44.8447 -0.0108808 45.1576 0.179777 45.9108C0.435552 46.9214 0.857933 47.646 1.64413 48.423C2.38437 49.1545 3.26208 49.6302 4.26289 49.842C5.25754 50.0527 41.8471 50.0527 42.8417 49.842C44.2782 49.538 45.6988 48.5021 46.4152 47.2364C47.0435 46.1263 47.1157 45.5681 47.1157 41.8137V38.4593L47.3357 38.4583C47.7224 38.4566 48.5609 37.9973 49.0265 37.5321C49.2747 37.2841 49.5953 36.8309 49.7389 36.5247L50 35.9683V31.2307V26.493L49.7457 25.9513C49.2934 24.9879 48.5548 24.3416 47.5766 24.0534L47.1646 23.9319L47.1126 20.426C47.061 16.956 47.058 16.9133 46.8095 16.2676C46.0937 14.4078 44.5121 13.0727 42.6456 12.7529L41.9466 12.6332L41.9157 10.4272L41.8848 8.22108L41.5634 7.56943C41.208 6.84862 40.6376 6.28088 39.9016 5.91535L39.4405 5.68638L34.2609 5.63754L29.0814 5.5887L28.4335 3.8045C27.6624 1.68047 27.5422 1.44114 26.9915 0.931626C26.4049 0.388993 25.6593 0.068786 24.8517 0.0128132C24.2987 -0.0255765 24.049 0.01379 23.3568 0.248329ZM24.8929 2.98054C25.0306 3.06807 25.192 3.43741 25.6431 4.6985L25.9698 5.61165L25.1629 5.66196C24.4976 5.70347 24.251 5.76824 23.7568 6.0314C23.0391 6.41354 22.5452 6.93458 22.1967 7.67717C21.9457 8.21209 21.9383 8.2832 21.908 10.4485L21.877 12.6708L15.0149 12.6703L8.153 12.6697L7.59061 11.1384C7.0904 9.7763 7.04298 9.58484 7.16148 9.4051C7.25964 9.25613 9.55311 8.37815 15.8879 6.06461C20.6142 4.33854 24.5471 2.92154 24.6278 2.91578C24.7085 2.91011 24.8278 2.93922 24.8929 2.98054ZM38.8469 8.72151C38.976 8.85055 39.0005 9.17779 39.0005 10.7729V12.6708H31.9119H24.8234V10.7729C24.8234 9.17779 24.8479 8.85055 24.977 8.72151C25.1137 8.58495 25.8775 8.56805 31.9119 8.56805C37.9464 8.56805 38.7101 8.58495 38.8469 8.72151ZM42.545 15.7407C43.0858 15.9335 43.5563 16.3297 43.8626 16.8501L44.1336 17.3107L44.1628 20.6007L44.1921 23.8908L40.7897 23.9233L37.3872 23.9559L36.605 24.2293C34.1248 25.0963 32.3728 26.9352 31.7029 29.3747C31.485 30.1685 31.4599 32.1101 31.6577 32.8843C32.1985 35.0013 33.6366 36.8063 35.5165 37.7275C37.0374 38.4727 37.1552 38.4904 40.8826 38.5331L44.1825 38.5708V41.7701C44.1825 45.3714 44.1494 45.5917 43.5103 46.2496C43.3107 46.4552 42.9733 46.7095 42.7606 46.8149C42.3802 47.0034 42.0561 47.0066 23.5523 47.0066C5.0485 47.0066 4.72438 47.0034 4.34404 46.8149C4.13129 46.7095 3.79299 46.4542 3.59226 46.2476C2.87285 45.5069 2.91655 46.5274 2.9452 31.1282L2.97101 17.3107L3.24204 16.8501C3.54827 16.3297 4.01885 15.9335 4.55963 15.7407C5.10423 15.5465 42.0004 15.5465 42.545 15.7407ZM46.9621 26.9884C47.0968 27.1231 47.1157 27.6416 47.1157 31.2056C47.1157 34.8497 47.099 35.2876 46.9539 35.4478C46.8018 35.6156 46.5363 35.6264 42.5746 35.6264C38.0096 35.6264 37.7684 35.6039 36.7338 35.0801C35.6962 34.5548 34.7684 33.3207 34.5151 32.1295C34.1271 30.3034 34.9555 28.4165 36.5701 27.449C37.5402 26.8678 37.7296 26.8484 42.489 26.8413C46.291 26.8357 46.8268 26.8533 46.9621 26.9884ZM38.1418 29.9279C37.0867 30.4474 37.1031 31.9849 38.1694 32.5006C38.3916 32.608 38.6776 32.6959 38.805 32.6959C39.2409 32.6959 39.8329 32.3256 40.0696 31.9049C40.7635 30.6714 39.4232 29.2969 38.1418 29.9279Z"
        fill={payMethod == "online" ? "#b5b5b5" : "#fdfdfd"}
      />
    </svg>
  );
  const deliverySvg = (
    <svg
      width="25"
      height="20"
      viewBox="0 0 25 20"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M16 2.83332V15.6667H10.1667C10.1667 15.0478 9.92083 14.4543 9.48325 14.0167C9.04566 13.5792 8.45217 13.3333 7.83333 13.3333C7.21449 13.3333 6.621 13.5792 6.18342 14.0167C5.74583 14.4543 5.5 15.0478 5.5 15.6667H3.16667C2.85725 15.6667 2.5605 15.5437 2.34171 15.3249C2.12292 15.1062 2 14.8094 2 14.5V2.83332C2 2.5239 2.12292 2.22716 2.34171 2.00837C2.5605 1.78957 2.85725 1.66666 3.16667 1.66666H14.8333C15.1428 1.66666 15.4395 1.78957 15.6583 2.00837C15.8771 2.22716 16 2.5239 16 2.83332ZM22.8017 8.37499L21.0167 5.69166C20.9099 5.52952 20.7644 5.39659 20.5932 5.30492C20.4221 5.21324 20.2308 5.16572 20.0367 5.16666H16V15.6667H17.1667C17.1667 15.0478 17.4125 14.4543 17.8501 14.0167C18.2877 13.5792 18.8812 13.3333 19.5 13.3333C20.1188 13.3333 20.7123 13.5792 21.1499 14.0167C21.5875 14.4543 21.8333 15.0478 21.8333 15.6667H23V9.01666C22.9982 8.78795 22.9292 8.56481 22.8017 8.37499Z"
        stroke="#A698CF"
        strokeWidth="2.15"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M10.1667 15.6667C10.1667 16.1282 10.0298 16.5793 9.77343 16.963C9.51704 17.3467 9.15262 17.6458 8.72626 17.8224C8.2999 17.999 7.83075 18.0452 7.37812 17.9552C6.9255 17.8651 6.50974 17.6429 6.18342 17.3166C5.8571 16.9903 5.63487 16.5745 5.54484 16.1219C5.4548 15.6693 5.50101 15.2001 5.67762 14.7737C5.85422 14.3474 6.15329 13.983 6.537 13.7266C6.92072 13.4702 7.37184 13.3333 7.83333 13.3333C8.45217 13.3333 9.04567 13.5792 9.48325 14.0167C9.92083 14.4543 10.1667 15.0478 10.1667 15.6667ZM19.5 13.3333C19.0385 13.3333 18.5874 13.4702 18.2037 13.7266C17.82 13.983 17.5209 14.3474 17.3443 14.7737C17.1677 15.2001 17.1215 15.6693 17.2115 16.1219C17.3015 16.5745 17.5238 16.9903 17.8501 17.3166C18.1764 17.6429 18.5922 17.8651 19.0448 17.9552C19.4974 18.0452 19.9666 17.999 20.3929 17.8224C20.8193 17.6458 21.1837 17.3467 21.4401 16.963C21.6965 16.5793 21.8333 16.1282 21.8333 15.6667C21.8333 15.0478 21.5875 14.4543 21.1499 14.0167C20.7123 13.5792 20.1188 13.3333 19.5 13.3333Z"
        stroke="#A698CF"
        strokeWidth="2.15"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
  const deliveryWallet = (
    <svg
      width="24"
      height="23"
      viewBox="0 0 24 23"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M16.2275 14.9501C16.2275 13.9974 16.9998 13.2251 17.9525 13.2251H18.0675C19.0202 13.2251 19.7925 13.9974 19.7925 14.9501C19.7925 15.9028 19.0202 16.6751 18.0675 16.6751H17.9525C16.9998 16.6751 16.2275 15.9028 16.2275 14.9501Z"
        fill="#A698CF"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M13.7215 0.489563C14.0861 -0.0300856 14.8028 -0.156001 15.3228 0.208252L20.9693 4.16425C21.4891 4.52845 21.6156 5.24492 21.2519 5.76508L19.1933 8.70908C18.9782 9.0168 18.6264 9.2001 18.2509 9.2001H4.07139C3.64235 9.2001 3.24899 8.96127 3.05107 8.58061C2.85315 8.19995 2.88358 7.74077 3.13001 7.38956L7.97151 0.489563C8.33628 -0.0303029 9.05341 -0.156071 9.57331 0.208642L12.4853 2.25138L13.7215 0.489563ZM11.1636 4.13368L9.19381 2.7519L6.28316 6.9001H9.22331L11.1636 4.13368ZM12.0332 6.9001L14.9442 2.75134L18.7086 5.38869L17.6518 6.9001H12.0332Z"
        fill="#A698CF"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M0.759766 9.2001C0.759766 7.92985 1.78951 6.9001 3.05977 6.9001H21.4598C22.73 6.9001 23.7598 7.92985 23.7598 9.2001V20.7001C23.7598 21.9704 22.73 23.0001 21.4598 23.0001H3.05977C1.78951 23.0001 0.759766 21.9704 0.759766 20.7001V9.2001ZM21.4598 9.2001H3.05977V20.7001H21.4598V9.2001Z"
        fill="#A698CF"
      />
    </svg>
  );
  const triangleSvg = (
    <svg
      width="20"
      height="20"
      viewBox="0 0 20 20"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <rect
        x="9.52295"
        width="13.537"
        height="13.4676"
        transform="rotate(45 9.52295 0)"
        fill="#A698CF"
      />
    </svg>
  );
  const locationSvg = (
    <svg
      width="22"
      height="21"
      viewBox="0 0 22 21"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M14.7348 7.33422H17.1941C17.447 7.33097 17.6928 7.4187 17.8865 7.58143C18.0802 7.74416 18.2091 7.97107 18.2495 8.22082L20.0122 18.7756C20.0368 18.9276 20.0279 19.0833 19.986 19.2315C19.9442 19.3798 19.8703 19.517 19.7697 19.6337C19.6692 19.7504 19.5443 19.8436 19.4038 19.9069C19.2633 19.9702 19.1107 20.0019 18.9567 19.9999H2.06909C1.91505 20.0019 1.76245 19.9702 1.62199 19.9069C1.48154 19.8436 1.35663 19.7504 1.25605 19.6337C1.15546 19.517 1.08164 19.3798 1.03976 19.2315C0.997875 19.0833 0.988952 18.9276 1.01361 18.7756L2.77626 8.22082C2.81672 7.97107 2.94555 7.74416 3.13928 7.58143C3.33301 7.4187 3.57875 7.33097 3.83173 7.33422H6.29099"
        stroke="#A698CF"
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M14.7348 5.22331C14.7348 4.10359 14.29 3.02973 13.4983 2.23797C12.7065 1.44621 11.6326 1.0014 10.5129 1.0014C9.3932 1.0014 8.31934 1.44621 7.52758 2.23797C6.73582 3.02973 6.29102 4.10359 6.29102 5.22331C6.29102 9.44521 10.5129 13.6671 10.5129 13.6671C10.5129 13.6671 14.7348 9.44521 14.7348 5.22331Z"
        stroke="#A698CF"
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
  const menuSvg = (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="36"
      height="36"
      style={{ fill: "rgba(181, 181, 181, 1)" }}
    >
      <path d="M12 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 12c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"></path>
    </svg>
  );

  for (var i = 0; i < shoppingCartProducts.length; i++) {
    cartProductsSave.push(shoppingCartProducts[i]);

    if (i == 2) {
      break;
    }
  }

  async function redirectToPaymentHandler() {
    setShowLoading(true);
    const currentAddress = props.user[0].address.find(
      (item) => item.location === addressInputChecked
    );

    const purchaseData = {
      userMobile: props.user[0].mobileNumber,
      currentAddress: currentAddress,
      products: shoppingCartProducts,
      finalPrice: finalPrice,
      payMethod: payMethod,
      condition: "NC",
      delivered: false,
      returned: false,
      PaymentStatus: false,
    };

    const response = await fetch("/api/storePurchases", {
      method: "POST",
      body: JSON.stringify(purchaseData),
      headers: {
        "Content-Type": "application/json",
      },
    });

    const results = await response.json();

    if (results.purchaseSuccess === 1) {
      dispatch(addProduct([]));
      router.push("/profile");
    } else if (results.purchaseSuccess === 0) {
      setShowLoading(false);
    }
  }

  return (
    <div className={styles.shopping_container}>
      <div
        className="loading-container"
        style={showLoading ? undefined : { display: "none" }}
      >
        <div className="loading-for-scale">
          <div className="loading-sub-container">
            <div className="row">
              <div className="purple-box"></div>
              <div className="white-box"></div>
            </div>
            <div className="row">
              <div className="white-box"></div>
              <div className="purple-box"></div>
            </div>
          </div>
        </div>
      </div>
      <div className={styles.shopping_right_container}>
        <div className={styles.shopping_right_upside_container}>
          <div
            className={
              payMethod == "online"
                ? `${styles.shopping_right_upside_left} ${styles.pay_method_active}`
                : styles.shopping_right_upside_left
            }
            onClick={() => setPayMethod("online")}
          >
            {creditCardSvg}
            <p>از طریق درگاه پرداخت</p>
          </div>
          <div
            className={
              payMethod == "inHome"
                ? `${styles.shopping_right_upside_right} ${styles.pay_method_active}`
                : styles.shopping_right_upside_right
            }
            onClick={() => setPayMethod("inHome")}
          >
            {homeWalletSvg}
            <p>پرداخت درب منزل شما</p>
          </div>
        </div>
        <div className={styles.shopping_right_downside_container}>
          <div className={styles.shopping_right_downside_title}>
            <p>خلاصه سفارش</p>
          </div>
          <div className={styles.shopping_right_downside_part_2}>
            <Link href="/checkout/cart">
              <div
                className={styles.shopping_right_downside_images_body}
                onClick={() => setShowLoading(true)}
              >
                {cartProductsSave.map((item) => {
                  return (
                    <div
                      key={item.id}
                      className={styles.shopping_right_downside_image_container}
                    >
                      <div className={styles.shopping_right_downside_image}>
                        <Image
                          alt=""
                          layout="responsive"
                          width="100"
                          height="100"
                          src={item.src}
                          draggable="false"
                        />
                      </div>
                    </div>
                  );
                })}
              </div>
            </Link>
            <div className={styles.shopping_right_downside_delivery_time}>
              {deliverySvg}
              <p>ارسال با پیک از 2 روز کاری دیگر</p>
            </div>
            <div className={styles.shopping_right_downside_delivery_price}>
              {deliveryWallet}
              <p>هزینه ارسال 23,500</p>
            </div>
          </div>

          <div className={styles.shopping_right_downside_part_3}>
            {locationSvg}
            <div
              className={
                addresses.length === 0
                  ? styles.shopping_right_downside_part_3_add_address
                  : `${styles.shopping_right_downside_part_3_add_address} ${styles.hide}`
              }
              onClick={() =>
                runAddFuncAddress ? dispatch(changeCond(true)) : undefined
              }
            >
              <p>افزودن آدرس</p>
            </div>
            <div
              className={
                addresses.length !== 0
                  ? styles.shopping_right_downside_part_3_address
                  : `${styles.shopping_right_downside_part_3_address} ${styles.hide}`
              }
            >
              <p>ارسال به آدرس :</p>
              <div
                className={styles.shopping_right_downside_part_3_all_addresses}
              >
                {addresses.map((address, index) => {
                  return (
                    <div key={index}>
                      <label className={styles.container}>
                        <p>{address.location}</p>
                        <input
                          type="radio"
                          name="radio"
                          value={address.location}
                          onChange={() =>
                            setAddressInputChecked(address.location)
                          }
                        />
                        <span className={styles.checkmark}></span>
                      </label>
                    </div>
                  );
                })}
              </div>
              <div
                className={styles.menu_vertical}
                onClick={() =>
                  setShopping_hover_opener_btn(
                    showHoverOpenerBtn ? false : true
                  )
                }
              >
                {menuSvg}
              </div>
            </div>
            <button
              className={
                showHoverOpenerBtn
                  ? `${styles.shopping_hover_opener_btn} ${styles.show_by_opacity}`
                  : styles.shopping_hover_opener_btn
              }
              onClick={() => {
                dispatch(changeCond(true));
                setShopping_hover_opener_btn(false);
              }}
            >
              <p>افزودن آدرس</p>
            </button>
          </div>

          <div className={styles.shopping_right_downside_discount}>
            <p>کد تخفیف دارید؟</p>
            <input />
            <button>اعمال</button>
          </div>
        </div>
      </div>
      <div className={styles.shopping_left_container}>
        <div className={styles.shopping_left_upside}>
          <div className={styles.shopping_left_upside_part_1}>
            <div className={styles.shopping_left_upside_texts}>
              <p>جمع قیمت کالا ها</p>
              <p>هزینه ارسال</p>
              <p>قیمت نهایی</p>
            </div>
            <div className={styles.shopping_left_upside_part_1_prices}>
              <div>
                <p>
                  {finalPrice.toString().replace(/\B(?=(\d{3})+(?!\d))/g, "٬")}
                </p>
                {tomanSvg}
              </div>
              <div>
                <p>23٬500</p>
                {tomanSvg}
              </div>
              <div>
                {(finalPrice + 23500)
                  .toString()
                  .replace(/\B(?=(\d{3})+(?!\d))/g, "٬")}
                {whiteToman}
              </div>
            </div>
          </div>
          <div
            className={
              cartProductLoad && addressInputChecked !== ""
                ? styles.shopping_left_upside_part_2
                : `${styles.shopping_left_upside_part_2} ${styles.dark_theme}`
            }
            onClick={() =>
              cartProductLoad && addressInputChecked !== ""
                ? redirectToPaymentHandler()
                : undefined
            }
          >
            <p>پرداخت و دریافت فاکتور</p>
          </div>
        </div>
        <div className={styles.shopping_left_downside}>
          <p className={styles.shopping_left_downside_title}>
            قبل از پرداخت، به نکات زیر دقت کنید:
          </p>
          <div>
            {triangleSvg}
            <p>
              لورم ایپسوم متن ساختگی با تولید سادگی نامفهوم از صنعت چاپ و با
              استفاده از.
            </p>
          </div>
          <div>
            {triangleSvg}
            <p>لورم ایپسوم متن ساختگی با تولید سادگی</p>
          </div>
          <div>
            {triangleSvg}
            <p>لورم ایپسوم متن ساختگی با تولید سادگی نامفهوم </p>
          </div>
          <div>
            {triangleSvg}
            <p>لورم ایپسوم متن ساختگی با تولید</p>
          </div>
        </div>
      </div>
      <CompleteUserForm
        user={props.user}
        cookieVal={cookieVal}
        addresses={addresses}
      />
    </div>
  );
}

export default ShoppingChild;
